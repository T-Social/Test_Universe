
/* loader (generated) - build: 2025-10-25T05:58:48.609917 */
(function(){
"use strict";

/* --- config (do not edit) --- */
var __ALLOWED_HOSTS = ["t-social.github.io"];
var __KEY_PARTS = ["zl00efCSsx4v7VQ=", "uTAATIqOlzzxvaw=", "nakgZDg4n/rJQQ=="];   // base64 parts
var __KEY_ORDER = [0, 1, 2];   // order to reconstruct
var __PAYLOAD_B64 = "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";  // base64(nonce || ciphertext)
var __MAC_B64 = "cBkHFWvTzEy4EQIRmzHO59t01JiIfdxcQjsxk5FZZ70=";          // base64(HMAC_SHA256(key, ciphertext))
var __KSTREAM_BLOCK = 32; // bytes per HMAC output
var __BUNDLE_MARKER = "BUNDLE_OK_V1"; // New marker value

/* --- helpers --- */
function __b64ToBuf(b64){
  var bin = atob(b64);
  var len = bin.length;
  var arr = new Uint8Array(len);
  for (var i=0;i<len;i++) arr[i] = bin.charCodeAt(i);
  return arr.buffer;
}
function __bufToHex(buf){
  var a = new Uint8Array(buf); var s = ""; for (var i=0;i<a.length;i++){ var h = a[i].toString(16); if(h.length==1) h='0'+h; s+=h; } return s;
}

/* reconstruct key from base64 parts */
function __assembleKey(){
  try {
    var s = "";
    for (var i=0; i<__KEY_ORDER.length; i++) {
      var idx = __KEY_ORDER[i];
      var p = __KEY_PARTS[idx] || "";
      s += atob(p);
    }
    var arr = new Uint8Array(s.length);
    for (var j=0;j<s.length;j++) arr[j] = s.charCodeAt(j);
    return arr.buffer;
  } catch(e) {
    return null;
  }
}

/* import HMAC key for Web Crypto */
function __importHmacKey(rawBuf){
  return crypto.subtle.importKey("raw", rawBuf, { name: "HMAC", hash: "SHA-256" }, false, ["sign","verify"]);
}

/* produce keystream block using HMAC(key, nonce||counter) via WebCrypto.sign; returns ArrayBuffer */
async function __hmacBlock(hmacKey, nonceBuf, counter){
  var counterBuf = new ArrayBuffer(8);
  var dv = new DataView(counterBuf);
  dv.setBigUint64(0, BigInt(counter));
  // concat nonce + counter
  var nb = new Uint8Array(nonceBuf), cb = new Uint8Array(counterBuf);
  var data = new Uint8Array(nb.length + cb.length);
  data.set(nb,0); data.set(cb, nb.length);
  var sig = await crypto.subtle.sign("HMAC", hmacKey, data.buffer); // returns ArrayBuffer (32 bytes)
  return sig;
}

/* derive keystream and XOR to decrypt */
async function __decryptWithHmacKeystream(keyBuf, payloadB64){
  try {
    var payloadBuf = __b64ToBuf(payloadB64);
    var arr = new Uint8Array(payloadBuf);
    if (arr.length < 12) throw "payload too small";
    var nonce = arr.slice(0, 12); 
    var ciphertext = arr.slice(12);
    
    var hmacKey = await __importHmacKey(keyBuf);
    
    var out = new Uint8Array(ciphertext.length);
    var counter = 0;
    var pos = 0;
    while (pos < ciphertext.length) {
      var blockBuf = await __hmacBlock(hmacKey, nonce.buffer, counter);
      var block = new Uint8Array(blockBuf);
      var take = Math.min(block.length, ciphertext.length - pos);
      for (var i=0;i<take;i++) {
        out[pos + i] = ciphertext[pos + i] ^ block[i];
      }
      pos += take;
      counter += 1;
    }
    return out.buffer; // ArrayBuffer of plaintext bytes
  } catch(e) {
    return null;
  }
}

/* anti-debug / anti-tamper functions */
function __hardFail(msg){
  try {
    document.documentElement.innerHTML = "";
    var d = document.createElement("div");
    d.style.position = "fixed";
    d.style.left = 0; d.style.top = 0; d.style.right = 0; d.style.bottom = 0;
    d.style.display = "flex"; d.style.alignItems = "center"; d.style.justifyContent = "center";
    d.style.background = "#111"; d.style.color = "#f66"; d.style.fontSize = "18px"; d.style.padding = "20px";
    d.innerText = "Security check failed: " + (msg || "tamper");
    document.documentElement.appendChild(d);
  } catch(e) { }
  throw new Error("hardFail: " + (msg || "tamper"));
}

(function __protect(){
  /* --- DEVTOOLS PROTECTION DISABLED (To prevent false positive devtools_detected) --- */
})();

/* host check */
(function __hostcheck(){
  try {
    var host = location.hostname || "";
    if (Array.isArray(__ALLOWED_HOSTS) && __ALLOWED_HOSTS.length) {
      if (__ALLOWED_HOSTS.indexOf(host) === -1) {
        __hardFail("host_mismatch");
      }
    }
  } catch(e){}
})();

/* --- MAIN: verify MAC, decrypt keystream, run bundle --- */
(async function __main(){
  // Check for Web Crypto API availability
  if (typeof crypto === 'undefined' || !crypto.subtle) {
      __hardFail("crypto_api_missing");
  }
  
  try {
    var keyBuf = __assembleKey();
    if (!keyBuf) __hardFail("key_reconstruct_fail");

    // Convert payload & mac
    var payloadB64 = __PAYLOAD_B64;
    var macB64 = __MAC_B64;

    // Reconstruct ciphertext buffer for verify
    var payloadBuf = __b64ToBuf(payloadB64);
    var payloadArr = new Uint8Array(payloadBuf);
    var ciphertextBuf = payloadArr.slice(12).buffer; 

    // Verify MAC using Web Crypto
    try {
        var hmacKey = await __importHmacKey(keyBuf);
        var macOk = await crypto.subtle.verify("HMAC", hmacKey, __b64ToBuf(macB64), ciphertextBuf).catch(function(e){ return false; });
        if (!macOk) {
          __hardFail("mac_verify_fail");
        }
    } catch(e) {
        __hardFail("crypto_verify_error"); 
    }

    // Decrypt via HMAC-stream keystream
    var plainBuf = await __decryptWithHmacKeystream(keyBuf, payloadB64);
    if (!plainBuf) __hardFail("decrypt_fail");

    // Convert to text
    var txt = new TextDecoder("utf-8").decode(plainBuf);

    // Basic bundle marker check
    if (txt.indexOf("var __BUNDLE_MARKER = 'BUNDLE_OK_V1'") === -1) {
      __hardFail("bundle_marker_missing");
    }
    
    // Function to execute the bundle
    var runBundle = function() {
      try { 
        // Execute the decoded bundle text synchronously in the global scope
        new Function(txt)(); 
      } catch(e) { 
        try { 
          console.error("Bundle Execution Failed:", e); 
        } catch(_){}
        __hardFail("exec_fail"); 
      }
    };

    // *** FIX: Poll for critical DOM element readiness before executing ***
    var ensureDomReadyAndRun = function() {
      var criticalElement = document.getElementById('starfield-container'); // Check for the element that causes the error
      if (criticalElement) {
        // Element found, execute the bundle
        runBundle();
      } else {
        // Element not found, wait and check again
        console.warn("DOM element #starfield-container not ready, retrying...");
        setTimeout(ensureDomReadyAndRun, 50); // Retry every 50ms
      }
    };

    // Start the check after the initial HTML parsing is likely done (using DOMContentLoaded as a starting point)
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', ensureDomReadyAndRun);
    } else {
        // Already interactive or complete, start checking immediately
        ensureDomReadyAndRun();
    }

  } catch (e) {
    // Loader exception catch: Catches any remaining, non-specific ASYNC exceptions
    try { console.error("loader error:", e); } catch(_){}
    __hardFail("loader_exception");
  }
})(); // Close __main async IIFE

// Close the Outer IIFE
})(); 
